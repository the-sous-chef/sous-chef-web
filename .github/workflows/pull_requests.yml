name: Pull Request Actions

on:
  pull_request:
    branches: [ master ]

jobs:

  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Cache web app dependencies
        uses: actions/cache@v3
        id: web-app-cache-node-modules
        env:
          cache-name: web-app-cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache cdk dependencies
        uses: actions/cache@v3
        id: cdk-cache-node-modules
        env:
          cache-name: cdk-cache-node-modules
        with:
          path: cdk/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./cdk/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
    
      - name: Install web app dependencies
        if: ${{ steps.web-app-cache-node-modules.outputs.cache-hit != 'true' }}
        run: npm ci --ignore-scripts

      - name: Install cdk dependencies
        if: ${{ steps.web-app-cache-node-modules.outputs.cache-hit != 'true' }}
        run: cd cdk && npm ci --ignore-scripts

  lint:
    name: "Run Linting"
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache web app dependencies
        uses: actions/cache@v3
        id: web-app-cache-node-modules
        env:
          cache-name: web-app-cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache cdk dependencies
        uses: actions/cache@v3
        id: cdk-cache-node-modules
        env:
          cache-name: cdk-cache-node-modules
        with:
          path: cdk/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./cdk/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Lint web app and cdk
        run: npm run lint

  test:
    needs: [install]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache web app dependencies
        uses: actions/cache@v3
        id: web-app-cache-node-modules
        env:
          cache-name: web-app-cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache cdk dependencies
        uses: actions/cache@v3
        id: cdk-cache-node-modules
        env:
          cache-name: cdk-cache-node-modules
        with:
          path: cdk/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./cdk/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
    
      - name: Run tests
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ${{github.workspace}}/coverage/cobertura-coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
    
      - name: Publish test report
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: ${{ github.workspace }}/junit.xml

      # - name: Publish code quality report
      #   uses: paambaati/codeclimate-action@v3.1.1
      #   with:
      #     coverageLocations: ${{github.workspace}}/coverage/cobertura-coverage.xml
      #   env:
      #     CC_TEST_REPORTER_ID: <code_climate_reporter_id>

  build:
    strategy:
      matrix:
        node-version: [18.x]
    needs: [install, lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache web app dependencies
        uses: actions/cache@v3
        id: web-app-cache-node-modules
        env:
          cache-name: web-app-cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache cdk dependencies
        uses: actions/cache@v3
        id: cdk-cache-node-modules
        env:
          cache-name: cdk-cache-node-modules
        with:
          path: cdk/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./cdk/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Build web app distribution
        run: npm run build
